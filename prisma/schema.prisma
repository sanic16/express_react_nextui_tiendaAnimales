// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String 
  email String @unique
  password String
  role Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  reviews Review[]
  products Product[]
}

enum Role{
  ADMIN
  USER
}

model Review{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  rating Int
  comment String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId 
  product Product @relation(fields: [productId], references: [id])
  productId String @db.ObjectId
}

model Product{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String
  breed String
  category String
  description String
  rating Float
  numReviews Int
  price Float
  countInStock Int
  reviews Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
}




